/*
ðŸ‘‹ Hi! This file was autogenerated by tslint-to-eslint-config.
https://github.com/typescript-eslint/tslint-to-eslint-config

It represents the closest reasonable ESLint configuration to this
project's original TSLint configuration.

We recommend eventually switching this configuration to extend from
the recommended rulesets in typescript-eslint. 
https://github.com/typescript-eslint/tslint-to-eslint-config/blob/master/docs/FAQs.md

Happy linting! ðŸ’–
*/
module.exports = {
	"env": {
		"browser": true,
		"es6": true,
		"node": true
	},
	"parser": "@typescript-eslint/parser",
	"parserOptions": {
		"project": [
			"tsconfig.json",
			"tsconfig.spec.json"
		],
		"sourceType": "module"
	},
	"plugins": [
		"eslint-plugin-jsdoc",
		"eslint-plugin-no-null",
		"@typescript-eslint",
		"@typescript-eslint/tslint"
	],
	"rules": {
		"@typescript-eslint/array-type": [
			"error",
			{
				"default": "array"
			}
		],
		"@typescript-eslint/consistent-type-assertions": "off",
		"@typescript-eslint/dot-notation": "off",
		"@typescript-eslint/explicit-member-accessibility": [
			"error",
			{
				"accessibility": "explicit",
				"overrides": {
					"constructors": "off",
					"accessors": "explicit",
					"parameterProperties": "explicit"
				}
			}
		],
		"@typescript-eslint/indent": [
			"error",
			"tab"
		],
		"@typescript-eslint/naming-convention": "off",
		"@typescript-eslint/no-empty-interface": "off",
		"@typescript-eslint/no-floating-promises": "off",
		"@typescript-eslint/no-inferrable-types": "off",
		"@typescript-eslint/type-annotation-spacing": [
			"error",
			{
				"before": true,
				"after": true
			}
		],
		"@typescript-eslint/explicit-function-return-type": [
			"error",
			{
				"allowExpressions": true,
				"allowTypedFunctionExpressions": true,
				"allowHigherOrderFunctions": true,
				"allowConciseArrowFunctionExpressionsStartingWithVoid": true
			}
		],
		// note you must disable the base rule as it can report incorrect errors
		"dot-notation": "off",
		"@typescript-eslint/dot-notation": [
			"error",
			{
				"allowPrivateClassPropertyAccess": false,
				"allowProtectedClassPropertyAccess": false,
				"allowIndexSignaturePropertyAccess": false
			}
		],
		// ----
		"class-methods-use-this": "off",
		"complexity": "off",
		"jsdoc/no-types": "off",
		"max-len": [
			"warn",
			{
				"code": 230
			}
		],
		"newline-per-chained-call": "off",
		"no-null/no-null": "off",
		"no-param-reassign": "off",
		"no-void": "off",
		"padding-line-between-statements": [
			"off",
			{
				"blankLine": "always",
				"prev": "*",
				"next": "return"
			}
		],
		"space-infix-ops": ["error"],
		"space-before-function-paren": [
			"error",
			{
				"anonymous": "never",
				"named": "never",
				"asyncArrow": "always"
			}
		],
		"object-curly-spacing": [
			"error", "always"
		],
		"array-bracket-spacing": [
			"error", "always"
		],
		"computed-property-spacing": [
			"error", "always"
		],
		"space-in-parens": [
			"error",
			"always"
		],
		"function-paren-newline": [
			"error", "consistent"
		],
		"keyword-spacing": [
			"error", {
				"before": true,
				"after": true,
				"overrides": {
					"catch": {
						"after": false
					},
					"throw": {
						"after": false
					},
					"switch": {
						"after": false
					}
				}
			}
		],
		"@typescript-eslint/tslint/config": [
			"error",
			{
				"rules": {
					"comment-type": [
						true,
						"doc",
						"singleline",
						"multiline",
						"directive"
					]
				}
			}
		]
	}
};
